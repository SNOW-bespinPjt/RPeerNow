<!--<?xml version="1.0" encoding="UTF-8" ?>-->
<!--&lt;!&ndash; 60초마다 설정 파일의 변경을 확인하여 변경시 갱신 &ndash;&gt;-->
<!--<configuration scan="true" scanPeriod="60 seconds">-->
<!--    &lt;!&ndash; 로그 패턴에 색상 적용 %clr(pattern){color} https://logback.qos.ch/manual/layouts.html#coloring &ndash;&gt;-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->

<!--    &lt;!&ndash; springProfile 태그를 사용하여 profile 별 property 값 설정 &ndash;&gt;-->
<!--    <springProfile name="loc">-->
<!--        &lt;!&ndash; local log file path &ndash;&gt;-->
<!--        <property name="LOG_PATH" value="/peerNow/logs"/>-->
<!--    </springProfile>-->

<!--    <springProfile name="dev">-->
<!--        &lt;!&ndash; dev log file path &ndash;&gt;-->
<!--        <property name="LOG_PATH" value="/home/instance/log"/>-->
<!--    </springProfile>-->

<!--    &lt;!&ndash; Environment 내의 프로퍼티들을 개별적으로 설정 &ndash;&gt;-->
<!--    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root"/>-->

<!--    &lt;!&ndash; log file name &ndash;&gt;-->
<!--    <property name="LOG_FILE_NAME" value="log"/>-->
<!--    &lt;!&ndash; err log file name &ndash;&gt;-->
<!--    <property name="ERR_LOG_FILE_NAME" value="err_log"/>-->
<!--    &lt;!&ndash; console log pattern &ndash;&gt;-->
<!--    <property name="CONSOLE_LOG_PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative]  %clr(%-5level) %clr(${PID:-}){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15thread]){faint} %clr(%-40.40logger{36}){cyan} %clr(:){faint} %msg%n"/>-->
<!--    &lt;!&ndash; file log pattern &ndash;&gt;-->
<!--    <property name="FILE_LOG_PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss}:%-3relative] %-5level ${PID:-} -&#45;&#45; [%15.15thread] %-40.40logger{36} : %msg%n"/>-->

<!--    &lt;!&ndash; Console Appender &ndash;&gt;-->
<!--    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    &lt;!&ndash; File Appender &ndash;&gt;-->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 파일경로 설정 &ndash;&gt;-->
<!--        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>-->

<!--        &lt;!&ndash; 출력패턴 설정 &ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${FILE_LOG_PATTERN}</pattern>-->
<!--        </encoder>-->

<!--        &lt;!&ndash; Rolling 정책 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; .gz .zip 등을 넣으면 자동 일자별 로그 파일 압축 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.gz</fileNamePattern>-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->

<!--                &lt;!&ndash; 파일당 최고 용량 kb, mb, gb &ndash;&gt;-->
<!--                <maxFileSize>10MB</maxFileSize>-->

<!--            </timeBasedFileNamingAndTriggeringPolicy>-->

<!--            &lt;!&ndash; 일자별 로그 파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 &ndash;&gt;-->
<!--            <maxHistory>3</maxHistory>-->

<!--            &lt;!&ndash; 전체 파일 크기를 제어하며, 전체 크기 제한을 조과하면 가장 오래된 파일을 삭제 &ndash;&gt;-->
<!--            <totalSizeCap>1GB</totalSizeCap>-->

<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash; 에러의 경우 파일에 로그 처리 &ndash;&gt;-->
<!--    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>error</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--        <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${FILE_LOG_PATTERN}</pattern>-->
<!--        </encoder>-->

<!--        &lt;!&ndash; Rolling 정책 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; .gz .zip 등을 넣으면 자동 일자별 로그파일 압축 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>-->

<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->

<!--                &lt;!&ndash; 파일당 최고 용량 kb, mb, gb &ndash;&gt;-->
<!--                <maxFileSize>10MB</maxFileSize>-->

<!--            </timeBasedFileNamingAndTriggeringPolicy>-->

<!--            &lt;!&ndash; 일자별 로그 파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거 &ndash;&gt;-->
<!--            <maxHistory>30</maxHistory>-->

<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    &lt;!&ndash; root는 전역 설정, 지역적으로 선언된 logger 설정이 있다면 해당 logger 설정이 default로 적용 &ndash;&gt;-->
<!--    <root level="${LOG_LEVEL}">-->
<!--        <appender-ref ref="CONSOLE"/>-->
<!--        <appender-ref ref="FILE"/>-->
<!--        <appender-ref ref="ERROR"/>-->
<!--    </root>-->

<!--    &lt;!&ndash; logger는 지역 설정, additivity = false는 root 설정 상속 유무를 설정하는 옵션. &ndash;&gt;-->
<!--    <logger name="org.apache.ibatis" level = "DEBUG" additivity = "false">-->
<!--        <appender-ref ref="CONSOLE"/>-->
<!--        <appender-ref ref="FILE"/>-->
<!--        <appender-ref ref="ERROR"/>-->
<!--    </logger>-->
<!--</configuration>-->